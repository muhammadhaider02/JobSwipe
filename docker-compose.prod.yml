services:
  # API Service (Production)
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile.prod
      target: runner
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
    networks:
      - jobswipe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web App (Production)
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile.prod
      target: runner
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:3002}
    depends_on:
      - api
    networks:
      - jobswipe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Docs App (Production)
  docs:
    build:
      context: .
      dockerfile: ./apps/docs/Dockerfile.prod
      target: runner
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
    networks:
      - jobswipe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
      - api
      - docs
    networks:
      - jobswipe-network
    restart: unless-stopped


networks:
  jobswipe-network:
    driver: bridge
